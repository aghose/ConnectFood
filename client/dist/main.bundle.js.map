{"version":3,"sources":["C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client async","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/app.component.css","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/app.component.html","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/app.component.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/app.module.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/auth-gaurd.service.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/login-model.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/login.component.css","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/login.component.html","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/login.component.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/login.service.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/logout.service.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/signup-model.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/signup.component.css","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/signup.component.html","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/signup.component.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/signup.service.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/donor/donor-primary.service.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/donor/donor.component.css","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/donor/donor.component.html","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/donor/donor.component.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/footer/footer.component.css","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/footer/footer.component.html","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/footer/footer.component.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/header/header.component.css","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/header/header.component.html","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/header/header.component.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/home/home.component.css","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/home/home.component.html","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/home/home.component.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver-cart/receiver-cart.component.css","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver-cart/receiver-cart.component.html","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver-cart/receiver-cart.component.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver/receiver-primary.service.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver/receiver.component.css","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver/receiver.component.html","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver/receiver.component.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver/shared/filters.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/shared/date-formatter.pipe.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/environments/environment.ts","C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../client async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client async\n// module id = ../../../../../client async recursive\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/app.component.css\n// module id = ../../../../../client/src/app/app.component.css\n// module chunks = 1","module.exports = \"<!--The whole content below can be removed with the new code.-->\\r\\n<div id=\\\"fullPage\\\">\\r\\n\\t<app-header id='appHeader'></app-header>\\r\\n\\r\\n\\t<router-outlet></router-outlet>\\r\\n\\r\\n\\t<app-footer id='appFooter'></app-footer>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/app.component.html\n// module id = ../../../../../client/src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Injectable } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { HttpModule } from '@angular/http'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BootstrapModalModule } from 'ng2-bootstrap-modal';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { LoginComponent } from './authentication/login.component';\r\nimport { DonorComponent } from './donor/donor.component';\r\nimport { ReceiverComponent } from './receiver/receiver.component';\r\nimport { ImageCropperComponent } from 'ng2-img-cropper';\r\nimport { DateFormatterPipe } from \"./shared/date-formatter.pipe\"\r\nimport { AuthGaurdService } from './authentication/auth-gaurd.service'\r\n\r\nimport { SignupComponent } from './authentication/signup.component';\r\nimport { ReceiverCartComponent } from './receiver-cart/receiver-cart.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'login', // This can be both modal popup and its own page!\r\n    component: LoginComponent\r\n  },\r\n  { \r\n    path: '',\r\n    pathMatch:'full', \r\n    redirectTo: '/home' \r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'donor',\r\n    component: DonorComponent,\r\n    canActivate: [ AuthGaurdService ]\r\n  },\r\n  {\r\n    path: 'receiver',\r\n    component: ReceiverComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    DonorComponent,\r\n    ReceiverComponent,\r\n    SignupComponent,\r\n    ImageCropperComponent,\r\n    DateFormatterPipe,\r\n    ReceiverCartComponent\r\n  ],\r\n  imports: [\r\n    NgbModule.forRoot(),\r\n    RouterModule.forRoot(appRoutes),\r\n    BrowserModule,\r\n    BootstrapModalModule,\r\n    HttpModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  entryComponents: [\r\n    LoginComponent\r\n  ],\r\n  bootstrap: [ AppComponent ],\r\n  providers: [ \r\n    DateFormatterPipe,\r\n    AuthGaurdService\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { DialogService } from \"ng2-bootstrap-modal\";\r\nimport { LoginComponent } from './login.component'\r\n\r\n@Injectable()\r\nexport class AuthGaurdService implements CanActivate {\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private router: Router,\r\n    private dialogService: DialogService\r\n  ) {}\r\n\r\n  public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>|boolean {\r\n    // If we aren't even marked as logged in locally, then we don't even need to ask server if we are logged in.\r\n    if (sessionStorage.getItem('appUserKey') == null) {\r\n      this.attemptLoginAndRedirect(state.url);\r\n      return false;\r\n    }\r\n\r\n    // We are marked as logged in locally, but check with server to ensure we are still authenticated!\r\n    var headers = new Headers({\r\n      'Content-Type': 'application/json'\r\n    });\r\n    var observer : Observable<Response> = this.http.get('/authentication/reAuthenticate')\r\n\r\n    // Finally, check the response from the server and react appropriately.\r\n    return observer.map((response: Response) => {\r\n      var body = response.json();\r\n      // If not a success, then redirect to login.\r\n      if (!body.success) {\r\n        this.attemptLoginAndRedirect(state.url);\r\n      }\r\n      return body.success;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generates a login dialog that the user can login with. If login is successful, then the user is redirected to their original target route.\r\n   * @param toUrl THe url that the user was trying to access before reAuthentication.\r\n   */\r\n  private attemptLoginAndRedirect(toUrl: string): void {\r\n    var dialogObserver = this.dialogService.addDialog(\r\n      LoginComponent,\r\n      // Dialog Initalization Data\r\n      null,\r\n      // DialogOptions\r\n      {\r\n        closeByClickingOutside: true,\r\n        backdropColor: '#222222',\r\n      }\r\n    );\r\n    \r\n    // Observe what the dialog result is.\r\n    dialogObserver.subscribe((isConfirmed) => {\r\n      // After done with login dialog, if we are logged in, then we can redirect to original intended link!\r\n      if (sessionStorage.getItem('appUserKey') != null) {\r\n        this.router.navigate([ toUrl ]);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/auth-gaurd.service.ts","/**\r\n * Contains state data for the Login Component.\r\n */\r\nexport class LoginModel {\r\n\r\n    public loginError : boolean;\r\n    public username : string;\r\n    public password : string;\r\n    public appUserKey : number;\r\n\r\n    constructor() {\r\n        // Clear these out whenever the user may be redirected to Login by the server!\r\n        sessionStorage.removeItem('appUserKey');\r\n        sessionStorage.removeItem('username');\r\n        this.loginError = false;\r\n    }\r\n\r\n    /**\r\n     * Processes a JSON Login Result from the server.\r\n     * -- INPUTS --\r\n     * data: The JSON result from the server. Should be of the format { appUserKey, username }.\r\n     * -- OUTPUT --\r\n     * True if the login was successful, false if it was not.\r\n     */\r\n    public processLoginResult(success: boolean, appUserKey: number, username: string) {\r\n        // Check to see if we got back a response that says the user is logged in.\r\n        if (success) {\r\n            this.appUserKey = appUserKey;\r\n            this.username = username;\r\n\r\n            // Set the sessionStorage global items in the client side cache for session info on client!\r\n            // This basically tells the client that we are logged in.\r\n            sessionStorage.setItem('appUserKey', '' + this.appUserKey);\r\n            sessionStorage.setItem('username', this.username);\r\n        }\r\n\r\n        // If we reach here, then the response indicated that the user did not login successfully.\r\n        this.loginError = !success;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/login-model.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\r\\n\\t-webkit-box-flex: 1;\\r\\n\\t    -ms-flex-positive: 1;\\r\\n\\t        flex-grow: 1;\\r\\n\\tdisplay: -webkit-box;\\r\\n\\tdisplay: -ms-flexbox;\\r\\n\\tdisplay: flex;\\r\\n\\t-webkit-box-pack: center;\\r\\n\\t    -ms-flex-pack: center;\\r\\n\\t        justify-content: center;\\r\\n\\t-webkit-box-align: center;\\r\\n\\t    -ms-flex-align: center;\\r\\n\\t        align-items: center;\\r\\n}\\r\\n\\r\\ndiv.input {\\r\\n\\tposition: relative;\\r\\n}\\r\\n\\r\\ndiv.input label {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\t-webkit-transform: translateY(-50%);\\r\\n\\t        transform: translateY(-50%);\\r\\n\\tleft: 10px;\\r\\n\\tbackground: white;\\r\\n\\tpadding: 5px 2px;\\r\\n}\\r\\n\\r\\ndiv.input input {\\r\\n\\tpadding: 10px 20px;\\r\\n\\tfont-size: 25px;\\r\\n\\toutline: 0;\\r\\n}\\r\\n\\r\\ndiv.input {\\r\\n\\tmargin-top: 20px;\\r\\n}\\r\\n\\r\\n.close {\\r\\n\\tdisplay: block;\\r\\n\\theight: 25px;\\r\\n\\twidth: 25px;\\r\\n\\tborder-radius: 50%;\\r\\n\\tbackground-color: red;\\r\\n\\tborder: 1px solid red;\\r\\n}\\r\\n\\r\\n#loginErr {\\r\\n\\ttext-align: center;\\r\\n\\tcolor: red;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/login.component.css\n// module id = ../../../../../client/src/app/authentication/login.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"modal-dialog\\\">\\r\\n\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t<h1 class=\\\"modal-title\\\">Sign In</h1>\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" >&times;</button>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-body\\\">\\r\\n\\t\\t\\t<form ngNativeValidate (submit)=\\\"loginUser($event)\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"input\\\">\\r\\n\\t\\t\\t\\t\\t<label>Username</label>\\r\\n\\t\\t\\t\\t\\t<input name=\\\"Username\\\" [(ngModel)]=\\\"loginModel.username\\\" type=\\\"text\\\" required autofocus>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"input\\\">\\r\\n\\t\\t\\t\\t\\t<label>Password</label>\\r\\n\\t\\t\\t\\t\\t<input name=\\\"Password\\\" [(ngModel)]=\\\"loginModel.password\\\" type=\\\"password\\\" required>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"input\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"submit\\\" value=\\\"Login\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t<p *ngIf=\\\"loginModel.loginError\\\" id=\\\"loginErr\\\">Incorrect login information. Please Try Again.</p>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/login.component.html\n// module id = ../../../../../client/src/app/authentication/login.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { DialogComponent, DialogService } from \"ng2-bootstrap-modal\";\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\nimport { LoginModel } from './login-model'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [ LoginService ]\r\n})\r\nexport class LoginComponent extends DialogComponent<null, boolean> {\r\n\r\n  public loginModel : LoginModel;\r\n\r\n  constructor (\r\n    public dialogService: DialogService,\r\n    private authenticationService: LoginService\r\n  )\r\n  {\r\n    super(dialogService);\r\n    this.loginModel = new LoginModel();\r\n  }\r\n\r\n  loginUser(event) {\r\n    event.preventDefault();\r\n\r\n    var observer = this.authenticationService.login(this.loginModel);\r\n    // This is the promise we get\r\n    observer.subscribe(\r\n      data => {\r\n        // Fill our model with the JSON result and see if Login is a success.\r\n        this.loginModel.processLoginResult(data.success, data.appUserKey, data.username);\r\n        if (data.success) this.close();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        // Shouldn't happen!\r\n      }\r\n    );\r\n\r\n    // TODO: We should put some loading symbol in login popup here!!!\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/login.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LoginModel } from './login-model'\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n  constructor(private http: Http) { }\r\n  \r\n  login(loginModel: LoginModel) {\r\n    var headers = new Headers({\r\n      'Content-Type': 'application/json'\r\n    });\r\n    var observer : Observable<Response> = this.http.post('/authentication/login', JSON.stringify(loginModel), {headers: headers})\r\n    return observer.map((response : Response) => { return response.json(); });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/login.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class LogoutService {\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private router: Router\r\n  ) {}\r\n\r\n  public logout(): void {\r\n    sessionStorage.clear();\r\n    this.http.get('/authentication/logout')\r\n    this.router.navigate([ '/home' ]);\r\n    // Not interested in the response...\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/logout.service.ts","/**\r\n * Contains state data for the Signup Component.\r\n */\r\nexport class SignupModel {\r\n\r\n    public signupError: string;\r\n    public firstName: string;\r\n    public lastName: string;\r\n    public username: string;\r\n    public email: string\r\n    public password: string;\r\n    public city: string;\r\n    public address: string;\r\n    public stateList: string[] = ['CA', 'NY', 'IN'];\r\n    public zip: number;\r\n\r\n    public appUserKey: number;\r\n\r\n    //stateList = ['CA', 'NY', 'IN'];\r\n\r\n     \r\n\r\n    \r\n\r\n    constructor() {}\r\n\r\n    /**\r\n     * Processes the result of a signup (from the server).\r\n     * @param success The flag that determines if the server successfully processed the signup.\r\n     * @param message The message form the server pertaining to the result (an error message if success is false).\r\n     * @param appUserKey The app user key for the new signed up user. Will be null if the signup failed.\r\n     */\r\n    processSignupResult(success: boolean, message: string, appUserKey: number): void {\r\n        if (success) {\r\n            this.signupError = null; // Be sure to clear any existing error message.\r\n            this.appUserKey = appUserKey;\r\n            sessionStorage.setItem('appUserKey', '' + this.appUserKey);\r\n            sessionStorage.setItem('username', this.username);\r\n        }\r\n        else {\r\n            this.signupError = message;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/signup-model.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".layout{\\r\\n    display: table;\\r\\n    border: 1px solid gray;\\r\\n    border-radius: 25px;\\r\\n    width: 385px;\\r\\n    margin: auto;\\r\\n    margin-top: 50px;\\r\\n    padding: 2px;\\r\\n\\r\\n}\\r\\n\\r\\n.checkOptions{\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.rowLayout{\\r\\n    display: table-row;\\r\\n    padding: 2px; \\r\\n}\\r\\n\\r\\n.tableCell{\\r\\n    display: table-cell;\\r\\n    \\r\\n}\\r\\n\\r\\nh2{\\r\\n    text-align: center;\\r\\n\\r\\n}\\r\\n\\r\\ninput {\\r\\n    display: block;\\r\\n    margin: 0 auto;\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\nform{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#signupErr {\\r\\n\\ttext-align: center;\\r\\n\\tcolor: red;\\r\\n}\\r\\n\\r\\n.checkbox{\\r\\n\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/signup.component.css\n// module id = ../../../../../client/src/app/authentication/signup.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"layout\\\">\\r\\n<br/>\\r\\n  <h2>Create your account</h2>\\r\\n  <hr/>\\r\\n  <form ngNativeValidate (submit)=\\\"signupUser($event)\\\" (select)=\\\"showStates($array)\\\" >\\r\\n  <br/>\\r\\n    \\r\\n  <input type=\\\"checkbox\\\">Sign up as a Donor \\r\\n  <input type=\\\"checkbox\\\">Sign up as a Receiver <br/> \\r\\n    \\r\\n      <br/>\\r\\n      Enter Your First Name:<br/>\\r\\n      <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"signupModel.firstName\\\" required autofocus autocomplete=\\\"on\\\"> \\r\\n      <br/>\\r\\n\\r\\n      Enter your Last Name:<br/> \\r\\n      <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"signupModel.lastName\\\" required autocomplete=\\\"on\\\">\\r\\n      <br/>\\r\\n\\r\\n      Enter your email address:<br/>\\r\\n      <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"signupModel.email\\\" required autocomplete=\\\"on\\\">\\r\\n      <br/>\\r\\n\\r\\n      Enter your address:<br/>\\r\\n      <input type=\\\"text\\\" name=\\\"address\\\" [(ngModel)]=\\\"signupModel.address\\\" required >\\r\\n      <br/>\\r\\n\\r\\n      Enter your city:<br/>\\r\\n      <input type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"signupModel.city\\\" required>\\r\\n      <br/>\\r\\n\\r\\n      Enter your state:<br/>\\r\\n      <select >\\r\\n      <option *ngFor=\\\"let state of signupModel.stateList\\\" [value]=\\\"state\\\">{{state}} </option>\\r\\n      </select>\\r\\n      <br/>\\r\\n      <br/>\\r\\n     \\r\\n      Enter your ZIP Code:<br/>\\r\\n      <input type=\\\"text\\\" name=\\\"zip\\\" maxlength=\\\"5\\\" [(ngModel)]=\\\"signupModel.zip\\\" required >\\r\\n      <br/>\\r\\n\\r\\n      Enter your phone number:<br/>\\r\\n      <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"signupModel.phone\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" required> \\r\\n      <br/>\\r\\n\\r\\n\\r\\n      Create a username:<br/> \\r\\n      <input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"signupModel.username\\\" required autocomplete=\\\"on\\\">\\r\\n      <br/>\\r\\n\\r\\n      Create a password:<br/> \\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"signupModel.password\\\" required>\\r\\n      <br/>\\r\\n\\r\\n\\r\\n\\r\\n      <button type=\\\"submit\\\">Sign Up</button>\\r\\n      <br/>\\r\\n\\r\\n\\r\\n  </form>\\r\\n\\r\\n  <div *ngIf=\\\"signupModel.signupError != null\\\" id=\\\"signupErr\\\">{{signupModel.signupError}}</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/signup.component.html\n// module id = ../../../../../client/src/app/authentication/signup.component.html\n// module chunks = 1","import { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SignupModel } from './signup-model'\r\nimport { SignupService } from './signup.service'\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css'],\r\n  providers: [ SignupService ]\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  public signupModel: SignupModel;\r\n\r\n  constructor(\r\n    private signupService: SignupService,\r\n    private router: Router\r\n  )\r\n  {\r\n    this.signupModel = new SignupModel();\r\n  }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n  signupUser(event: Event): void {\r\n    event.preventDefault();\r\n\r\n    var observer = this.signupService.signup(this.signupModel);\r\n    // This is the promise we get\r\n    observer.subscribe(\r\n      data => {\r\n        // Fill our model with the JSON result and see if Login is a success.\r\n        console.log(data.message);\r\n        // Will set global local storage internally if success.\r\n        this.signupModel.processSignupResult(data.success, data.message, data.appUserKey);\r\n        if (data.success) {\r\n          this.router.navigate([ '/home' ]);\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        // Shouldn't happen!\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/signup.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { SignupModel } from './signup-model';\r\n\r\n@Injectable()\r\nexport class SignupService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  signup(signupModel: SignupModel) {\r\n    var headers = new Headers({\r\n      'Content-Type': 'application/json'\r\n    });\r\n    var observer : Observable<Response> = this.http.post('/authentication/signup', JSON.stringify(signupModel), {headers: headers})\r\n    return observer.map((response : Response) => {\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/authentication/signup.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { DateFormatterPipe } from \"../shared/date-formatter.pipe\"\r\nimport { DonorSubmission } from \"../shared/donor-submission\"\r\n\r\nimport { Food } from '../shared/food';\r\n\r\n@Injectable()\r\nexport class DonorPrimaryService {\r\n    constructor(private http: Http,\r\n                private dateFormatter: DateFormatterPipe) {}\r\n\r\n    addFoodListing(foodListing: Food, image: string): Observable<boolean> {\r\n        foodListing.image = image;\r\n        foodListing.perishable;\r\n\r\n        // This is uniform with object on Server. In future, will make a shared directory where these class definitions can uniformly reside!\r\n        var headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n        });\r\n        var observer: Observable<Response> = this.http.post('/donor/addFoodListing', JSON.stringify(foodListing), {headers: headers, withCredentials: true});\r\n        return observer.map((response : Response) => {\r\n            console.log(response);\r\n            return response.json().success;\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/donor/donor-primary.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"label {\\r\\n    font-weight: bold;\\r\\n    font-size: 25px;\\r\\n}\\r\\n\\r\\ninput[type=checkbox]\\r\\n{\\r\\n  /* Double-sized Checkboxes */\\r\\n  -ms-transform: scale(2); /* IE */\\r\\n  -moz-transform: scale(2); /* FF */\\r\\n  -webkit-transform: scale(2); /* Safari and Chrome */\\r\\n  -o-transform: scale(2); /* Opera */\\r\\n  padding: 10px;\\r\\n  margin-left: 10px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/donor/donor.component.css\n// module id = ../../../../../client/src/app/donor/donor.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1>Donor Form</h1>\\r\\n    <hr>\\r\\n    <div *ngIf=\\\"!submitted\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <label>Upload Image</label>\\r\\n            <img-cropper [image]=\\\"this\\\" [settings]=\\\"cropperSettings\\\"></img-cropper>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-7\\\">\\r\\n            <form [formGroup]=\\\"foodForm\\\" (ngSubmit)=\\\"onSubmit(foodForm)\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"foodType\\\">Food Type</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"foodType\\\">\\r\\n                        <option *ngFor=\\\"let foodT of foodTypeOptions\\\" [value]=\\\"foodT\\\">{{foodT}}</option>\\r\\n                    </select>\\r\\n                    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!shouldFireRequireValidation(foodForm.controls.foodType)\\\">Food Type is required</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"perishable\\\">Perishable</label>\\r\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"perishable\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"foodDescription\\\">Description</label>\\r\\n                    <textarea class=\\\"form-control\\\" formControlName=\\\"foodDescription\\\"></textarea>\\r\\n                    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!shouldFireRequireValidation(foodForm.controls.foodDescription)\\\">Description is required</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" formControlName=\\\"expirationDate\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                        <div class=\\\"input-group-addon\\\" (click)=\\\"d.toggle()\\\" >\\r\\n                            <img src=\\\"img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!shouldFireRequireValidation(foodForm.controls.expirationDate)\\\">Expiration Date is required</div>\\r\\n                </div>\\r\\n\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"submitted\\\">\\r\\n        <h2>You submitted the following:</h2>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2\\\">Food Type</div>\\r\\n            <div class=\\\"col-md-10 pull-left\\\">{{ model.foodType }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2\\\">Description</div>\\r\\n            <div class=\\\"col-md-10 pull-left\\\">{{ model.foodDescription }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2\\\">Perishability</div>\\r\\n            <div class=\\\"col-md-10 pull-left\\\">{{ model.perishable }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2\\\">Expiration Date</div>\\r\\n            <div class=\\\"col-md-10 pull-left\\\">{{ model.expirationDate | dateFormatter }}</div>\\r\\n        </div>\\r\\n        <br />\\r\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"submitted=false\\\">Edit</button>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/donor/donor.component.html\n// module id = ../../../../../client/src/app/donor/donor.component.html\n// module chunks = 1","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { ImageCropperComponent, CropperSettings } from 'ng2-img-cropper';\r\n\r\nimport { ValidationService } from '../shared/validation.service';\r\nimport { Food } from '../shared/food';\r\nimport { DonorPrimaryService } from \"./donor-primary.service\";\r\nimport { DateFormatterPipe } from \"../shared/date-formatter.pipe\"\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'donor',\r\n  templateUrl: 'donor.component.html',\r\n  providers: [ DonorPrimaryService ],\r\n  styleUrls: [ 'donor.component.css' ]\r\n})\r\nexport class DonorComponent implements OnInit {\r\n  foodForm: FormGroup;\r\n  perishableOptions: string[];\r\n  foodTypeOptions: string[];\r\n  forceValidation: boolean;\r\n  submitted: boolean;\r\n  dispUrl: string;\r\n\r\n  image: string;\r\n  cropperSettings: CropperSettings;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private donorPrimaryService: DonorPrimaryService,\r\n              private element: ElementRef,\r\n              private dateFormatter: DateFormatterPipe)\r\n  {\r\n    // Want to force validators to process on submit. Non-text fields will only validate on submit too!\r\n    this.forceValidation = false;\r\n    this.submitted = false;\r\n\r\n    this.cropperSettings = new CropperSettings();\r\n    this.cropperSettings.width = 100;\r\n    this.cropperSettings.height = 100;\r\n    this.cropperSettings.croppedWidth =100;\r\n    this.cropperSettings.croppedHeight = 100;\r\n    this.cropperSettings.canvasWidth = 400;\r\n    this.cropperSettings.canvasHeight = 300;\r\n\r\n    this.perishableOptions = ['Perishable', 'Not Perishable'];\r\n    this.foodTypeOptions = ['Grain', 'Meat', 'Fruit', 'Vegetable', 'Drink'];\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.foodForm = this.formBuilder.group({\r\n        foodType:         ['', Validators.required],\r\n        perishable:       [''],\r\n        foodDescription:  ['', Validators.required],\r\n        expirationDate:   ['', Validators.required]\r\n      });\r\n  }\r\n\r\n  shouldFireRequireValidation(validField: AbstractControl): boolean {\r\n    return validField.errors != null && validField.errors.required && (validField.touched || this.forceValidation);\r\n  }\r\n\r\n  onSubmit({ value, valid }: { value: Food, valid: boolean }) {\r\n    this.forceValidation = true;\r\n    if (valid) {\r\n      var observer = this.donorPrimaryService.addFoodListing(this.foodForm.getRawValue(), this.image);\r\n      observer.subscribe(\r\n        (success: boolean) => {\r\n          this.submitted = true;\r\n        },\r\n        (error: Error) => {\r\n          console.log(error);\r\n          // Shouldn't happen!\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/donor/donor.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/footer/footer.component.css\n// module id = ../../../../../client/src/app/footer/footer.component.css\n// module chunks = 1","module.exports = \"<p>\\r\\n  Copyright &copy; Connect Food\\r\\n</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/footer/footer.component.html\n// module id = ../../../../../client/src/app/footer/footer.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/footer/footer.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"header {\\r\\n\\ttext-align: center;\\r\\n\\tpadding: 20px 0;\\r\\n\\tfont-size: 30px;\\r\\n\\tborder-bottom: 2px solid #eee;\\r\\n}\\r\\n\\r\\n#loginButton:hover, #logoutButton:hover {\\r\\n\\tcursor: pointer;\\r\\n\\tcursor: hand;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/header/header.component.css\n// module id = ../../../../../client/src/app/header/header.component.css\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-toggleable-sm navbar-inverse bg-inverse\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"navbar-toggler navbar-toggler-right\\\" (click)=\\\"isExpanded = !isExpanded\\\" [attr.aria-expanded]=\\\"!isExpanded\\\" aria-controls=\\\"navbarContent\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Connect Food</div>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarContent\\\" [ngbCollapse]=\\\"!isExpanded\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <li class=\\\"nav-item\\\"><a class='nav-link' [routerLink]=\\\"['/home']\\\">Home</a></li>\\r\\n            <li class=\\\"nav-item\\\"><a class='nav-link' [routerLink]=\\\"['/donor']\\\">Donor</a></li>\\r\\n            <li class=\\\"nav-item\\\"><a class='nav-link' [routerLink]=\\\"['/receiver']\\\">Receiver</a></li>\\r\\n        </ul>\\r\\n        <ul class=\\\"navbar-nav navbar-right\\\">\\r\\n            <li *ngIf=\\\"sessionStorage.getItem('appUserKey') === null\\\" class=\\\"nav-item\\\"><a id='loginButton' class='nav-link' (click)=\\\"showLogin()\\\">Login</a></li>\\r\\n            <li *ngIf=\\\"sessionStorage.getItem('appUserKey') === null\\\" class=\\\"nav-item\\\"><a id='signupButton' class='nav-link' [routerLink]=\\\"['/signup']\\\">Sign Up</a></li>\\r\\n            <li *ngIf=\\\"sessionStorage.getItem('appUserKey') !== null\\\" class=\\\"nav-item\\\"><a class='nav-link'>{{sessionStorage.getItem('username')}}</a></li>\\r\\n            <li *ngIf=\\\"sessionStorage.getItem('appUserKey') !== null\\\" class=\\\"nav-item\\\"><a id='logoutButton' class='nav-link' (click)=\\\"logout()\\\">Logout</a></li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/header/header.component.html\n// module id = ../../../../../client/src/app/header/header.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { DialogService } from \"ng2-bootstrap-modal\";\r\nimport { LoginComponent } from '../authentication/login.component';\r\nimport { LogoutService } from '../authentication/logout.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n  providers: [ LogoutService ]\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  public sessionStorage = sessionStorage;\r\n\r\n  constructor(\r\n    private dialogService: DialogService,\r\n    private logoutService: LogoutService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public showLogin(): void {\r\n    var dialogObserver = this.dialogService.addDialog (\r\n      LoginComponent,\r\n      // Dialog Initalization Data\r\n      null,\r\n      // DialogOptions\r\n      {\r\n        closeByClickingOutside: true,\r\n        backdropColor: '#222222',\r\n      }\r\n    );\r\n\r\n    // Observe what the dialog result is.\r\n    dialogObserver.subscribe((isConfirmed) => {\r\n        // TODO: Replace the Login link with username link.\r\n    });\r\n  }\r\n\r\n  public logout(): void {\r\n    this.logoutService.logout();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/header/header.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/home/home.component.css\n// module id = ../../../../../client/src/app/home/home.component.css\n// module chunks = 1","module.exports = \"<p>\\r\\n    Home works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/home/home.component.html\n// module id = ../../../../../client/src/app/home/home.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver-cart/receiver-cart.component.css\n// module id = ../../../../../client/src/app/receiver-cart/receiver-cart.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <h2>Filters</h2>\\r\\n      <hr>\\r\\n      <form [formGroup]=\\\"filterForm\\\">\\r\\n      <h4>Food Types:</h4>\\r\\n        <div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.grain\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"grain\\\">Grain\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.meat\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"meat\\\">Meat\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.fruit\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"fruit\\\">Fruit\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.vegetable\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"vegetable\\\">Vegetable\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.drink\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"drink\\\">Drink\\r\\n          </label>\\r\\n        </div>\\r\\n        <h4>Minimum Expiration:</h4>\\r\\n        <div ngbRadioGroup name=\\\"radioBasic\\\" formControlName=\\\"minExpireAfterDays\\\">\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"0\\\">{{tFrameVals[0]}}\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"1\\\">{{tFrameVals[1]}}\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"2\\\">{{tFrameVals[2]}}\\r\\n          </label>\\r\\n        </div>\\r\\n        <h4>Acceptable Perishability:</h4>\\r\\n        <div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.perishable\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"perishable\\\">Perishable\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.notPerishable\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"notPerishable\\\">Not Perishable\\r\\n          </label>\\r\\n        </div>\\r\\n        <hr>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismss\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">{{selectedModel.name}}</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"c('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <p>{{selectedModel.foodDescription}}</p>\\r\\n        </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Request click')\\\">Request</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n      <h2>Listings</h2>\\r\\n      <hr>\\r\\n      <div class=\\\"list-group\\\" style=\\\"overflow-y:auto\\\">\\r\\n        <a *ngFor=\\\"let model of models\\\" class=\\\"list-group-item\\\">\\r\\n          <img [src]=\\\"model.imgUrl\\\" alt=\\\"No Picture\\\" class=\\\"img-thumbnail\\\" style=\\\"width:7vw;height:7vw\\\">\\r\\n          <div>\\r\\n            <h4 style=\\\"margin-left:1vw\\\">{{model.name}}\\r\\n              <button style=\\\"float:right\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"selectItem(content, model)\\\">\\r\\n                Details\\r\\n              </button>\\r\\n            </h4>\\r\\n            <hr>\\r\\n            <p style=\\\"margin-left:1vw\\\">\\r\\n              From {{model.donorOrganizationName}}, at {{model.donorOrganizationAddress}} {{model.donorDistance}} miles away. <br>\\r\\n              Present food types: {{model.foodTypeDescription}}. Expires: {{model.expirationDate}}. Requires a {{model.quantityClass}}.\\r\\n            </p>\\r\\n          </div>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver-cart/receiver-cart.component.html\n// module id = ../../../../../client/src/app/receiver-cart/receiver-cart.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-receiver-cart',\r\n  templateUrl: './receiver-cart.component.html',\r\n  styleUrls: ['./receiver-cart.component.css']\r\n})\r\nexport class ReceiverCartComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver-cart/receiver-cart.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { Food } from './shared/food';\r\nimport { Filters } from './shared/filters';\r\n\r\nconst MODELS: Food[] = [\r\n    {name: \"Beef Stew\",\r\n    foodListingKey: 0,\r\n    donorOrganizationName: \"Stew's Stews\",\r\n    donorOrganizationAddress: \"800 Beef Lane\",\r\n    donorOrganizationCity: \"Williamsville\",\r\n    donorOrganizationState: \"New York\",\r\n    donorOrganizationZip: 14221,\r\n    donorLastName: \"Stew\",\r\n    donorFirstName: \"Steven\",\r\n    donorDistance: 6,\r\n    foodTypeDescription: \"Meat, Vegetable, Drink\",\r\n    foodDescription: \"Quite the beefy stew...\",\r\n    preishable: true,\r\n    expirationDate: \"13/32/2017\",\r\n    quantityClass: \"Car\",\r\n    imgUrl: \"https://i5.walmartimages.com/asr/4026d667-1824-48e3-acab-c46642521070_1.a0a61552b58949ce15a4990a2e02b050.jpeg?odnHeight=450&odnWidth=450&odnBg=FFFFFF\"}\r\n]\r\n\r\n@Injectable()\r\nexport class ReceiverPrimaryService {\r\n    models: Food[];\r\n\r\n    constructor(private http: Http) { }\r\n    \r\n    updateFeed(filterObj: Filters) {\r\n      var headers = new Headers({\r\n        'Content-Type': 'application/json'\r\n      });\r\n\r\n      var observer : Observable<Response> = this.http.post('/receiver/getFoodListings', JSON.stringify(filterObj), { headers: headers, withCredentials: true })\r\n      return observer.map((response : Response) =>\r\n        {\r\n          console.log(response.json());\r\n          return response.json();\r\n        }\r\n      );\r\n    }\r\n    /*\r\n    updateFeed(filterObj: Filters): Promise<Food[]> {\r\n      return Promise.resolve(MODELS);\r\n    }*/\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver/receiver-primary.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver/receiver.component.css\n// module id = ../../../../../client/src/app/receiver/receiver.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <h2>Filters</h2>\\r\\n      <hr>\\r\\n      <form [formGroup]=\\\"filterForm\\\">\\r\\n      <h4>Acceptable Food Types:</h4>\\r\\n        <div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.grain\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"grain\\\">Grain\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.meat\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"meat\\\">Meat\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.fruit\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"fruit\\\">Fruit\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.vegetable\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"vegetable\\\">Vegetable\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.drink\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"drink\\\">Drink\\r\\n          </label>\\r\\n        </div>\\r\\n        <h4>Minimum Expiration:</h4>\\r\\n        <ngb-datepicker #dp [(ngModel)]=\\\"filterForm.value.minExpireAfterDays\\\" (navigate)=\\\"date = $event.next\\\"></ngb-datepicker>\\r\\n        <!--<div ngbRadioGroup name=\\\"radioBasic\\\" formControlName=\\\"minExpireAfterDays\\\">\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"0\\\">{{tFrameVals[0]}}\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"1\\\">{{tFrameVals[1]}}\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"2\\\">{{tFrameVals[2]}}\\r\\n          </label>\\r\\n        </div>\\r\\n        <h4>Maximum Distance:</h4>\\r\\n        <div ngbRadioGroup name=\\\"radioBasic\\\" formControlName=\\\"maxDistance\\\">\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"0\\\">{{distVals[0]}}\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"1\\\">{{distVals[1]}}\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"2\\\">{{distVals[2]}}\\r\\n          </label>\\r\\n        </div>\\r\\n        <h4>Must Fit in a:</h4>\\r\\n        <div ngbRadioGroup name=\\\"radioBasic\\\" formControlName=\\\"maxQuantity\\\">\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"0\\\">{{quantityVals[0]}}\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"1\\\">{{quantityVals[1]}}\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\">\\r\\n            <input type=\\\"radio\\\" [value]=\\\"2\\\">{{quantityVals[2]}}\\r\\n          </label>\\r\\n        </div>-->\\r\\n        <h4>Acceptable Perishability:</h4>\\r\\n        <div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.perishable\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"perishable\\\">Perishable\\r\\n          </label>\\r\\n          <label class=\\\"btn btn-primary\\\" [class.active]=\\\"filterForm.value.notPerishable\\\">\\r\\n            <input type=\\\"checkbox\\\" formControlName=\\\"notPerishable\\\">Not Perishable\\r\\n          </label>\\r\\n        </div>\\r\\n        <hr>\\r\\n      </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismss\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">{{selectedModel.name}}</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"c('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <p>{{selectedModel.foodDescription}}</p>\\r\\n        </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Request click')\\\">Request</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n      <h2>Listings</h2>\\r\\n      <hr>\\r\\n      <div class=\\\"list-group\\\" style=\\\"overflow-y:auto\\\">\\r\\n        <a *ngFor=\\\"let model of models\\\" class=\\\"list-group-item\\\">\\r\\n          <img [src]=\\\"model.imgUrl\\\" alt=\\\"No Picture\\\" class=\\\"img-thumbnail\\\" style=\\\"width:7vw;height:7vw\\\">\\r\\n          <div>\\r\\n            <h4 style=\\\"margin-left:1vw\\\">{{model.name}}\\r\\n              <button style=\\\"float:right\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"selectItem(content, model)\\\">\\r\\n                Details\\r\\n              </button>\\r\\n            </h4>\\r\\n            <hr>\\r\\n            <p style=\\\"margin-left:1vw\\\">\\r\\n              From {{model.donorOrganizationName}}, at {{model.donorOrganizationAddress}} {{model.donorDistance}} miles away. <br>\\r\\n              Present food types: {{model.foodTypeDescription}}. Expires: {{model.expirationDate}}. Requires a {{model.quantityClass}}.\\r\\n            </p>\\r\\n          </div>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver/receiver.component.html\n// module id = ../../../../../client/src/app/receiver/receiver.component.html\n// module chunks = 1","import { Component, OnInit, NgModule, Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { NgbModule, NgbModal, ModalDismissReasons, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { Food } from './shared/food';\r\nimport { Filters } from './shared/filters';\r\nimport { ReceiverPrimaryService } from './receiver-primary.service';\r\n\r\nconst now = new Date();\r\n\r\nconst MODELS: Food[] = [\r\n    {name: \"Beef Stew\",\r\n    foodListingKey: 0,\r\n    donorOrganizationName: \"Stew's Stews\",\r\n    donorOrganizationAddress: \"800 Beef Lane\",\r\n    donorOrganizationCity: \"Williamsville\",\r\n    donorOrganizationState: \"New York\",\r\n    donorOrganizationZip: 14221,\r\n    donorLastName: \"Stew\",\r\n    donorFirstName: \"Steven\",\r\n    donorDistance: 6,\r\n    foodTypeDescription: \"Meat, Vegetable, Drink\",\r\n    foodDescription: \"Quite the beefy stew...\",\r\n    preishable: true,\r\n    expirationDate: \"13/32/2017\",\r\n    quantityClass: \"Car\",\r\n    imgUrl: \"https://i5.walmartimages.com/asr/4026d667-1824-48e3-acab-c46642521070_1.a0a61552b58949ce15a4990a2e02b050.jpeg?odnHeight=450&odnWidth=450&odnBg=FFFFFF\"}\r\n]\r\n\r\n@Component({\r\n  selector: 'app-receiver',\r\n  templateUrl: './receiver.component.html',\r\n  styleUrls: ['./receiver.component.css'],\r\n  providers: [ReceiverPrimaryService]\r\n})\r\n\r\nexport class ReceiverComponent implements OnInit {\r\n  tester: any;\r\n  models: Food[];\r\n  selectedModel: Food;\r\n  filters: Filters;\r\n  filterForm: FormGroup;\r\n  quantityVals: string[];\r\n  tFrameVals: string[];\r\n  distVals: string[];\r\n  \r\n  constructor(private formBuilder: FormBuilder,\r\n  private receiverPrimaryService: ReceiverPrimaryService,\r\n  private modalService: NgbModal) {}\r\n\r\n  ngOnInit() {\r\n    this.filters = new Filters(true, true, true, true, true, true, false, {year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate()}, 0, 0);\r\n\r\n    this.onChange(this.filters);\r\n\r\n    this.quantityVals = [\"Car\", \"Van\", \"Truck\"];\r\n    this.tFrameVals = [\"0-6 Days\", \"6-12 Days\", \"12+ Days\"];\r\n    this.distVals = [\"0-6 Miles\", \"6-12 Miles\", \"12+ Miles\"];\r\n\r\n    this.filterForm = this.formBuilder.group({\r\n      grain: this.filters.grain,\r\n      meat: this.filters.meat,\r\n      vegetable: this.filters.vegetable,\r\n      fruit: this.filters.fruit,\r\n      drink: this.filters.drink,\r\n      minExpireAfterDays: this.filters.minExpireAfterDays,\r\n      maxQuantity: this.filters.maxQuantity,\r\n      maxDistance: this.filters.maxDistance,\r\n      perishable: this.filters.perishable,\r\n      notPerishable: this.filters.notPerishable\r\n    });\r\n\r\n    this.filterForm.valueChanges.subscribe(data => {\r\n      this.onChange(this.filterForm.value);\r\n    });\r\n  }\r\n  \r\n  onChange(value: Filters) {\r\n    //this.receiverPrimaryService.updateFeed(value).then(models => this.models = models);\r\n    var observer = this.receiverPrimaryService.updateFeed(value);\r\n\r\n    observer.subscribe(\r\n      data => {\r\n        //Apply Food model to data and store in this.models\r\n        this.models = data as Food[];\r\n      }\r\n    );\r\n    //this.models = MODELS;\r\n  }\r\n\r\n  selectItem(content, value: Food) {\r\n    //For viewing specifics and taking a listing down from the server\r\n    this.selectedModel = value;\r\n    this.modalService.open(content).result.then((result) => {\r\n      if (result === \"Request click\") {\r\n        //Send item request to back end\r\n      }\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver/receiver.component.ts","import { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nexport class Filters{\r\n    constructor(\r\n        public grain: boolean,\r\n        public meat: boolean,\r\n        public fruit: boolean,\r\n        public vegetable: boolean,\r\n        public drink: boolean,\r\n        public perishable?: boolean,\r\n        public notPerishable?: boolean,\r\n        public minExpireAfterDays?: NgbDateStruct,\r\n        public maxQuantity?: number,\r\n        public maxDistance?: number,\r\n    ){}\r\n    /*\r\n    constructor(\r\n        public foodType?: number[],\r\n        public preishable?: boolean,\r\n        public notPerishable?: boolean,\r\n        public minExpireAfterDays?: number,\r\n        public maxDistance?: number,\r\n        public maxQuantity?: number\r\n    ){}\r\n    */\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/receiver/shared/filters.ts","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Pipe({\r\n  name: 'dateFormatter'\r\n})\r\nexport class DateFormatterPipe implements PipeTransform {\r\n\r\n  transform(value: NgbDateStruct, args?: any): string {\r\n    return this.formatDate(value);\r\n  }\r\n\r\n  formatDate(value: NgbDateStruct): string {\r\n    if (value != null) {\r\n      return (value.month.toString() + '/' + value.day.toString() + '/' + value.year.toString());\r\n    }\r\n    return '';\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/app/shared/date-formatter.pipe.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Emery.Emery-PC/Documents/GitHub/ConnectFood/client/src/main.ts"],"sourceRoot":"webpack:///"}